@use '../shared/_utils' as *;
@use '../shared/colors' as *;

@mixin button--formless {
  border: none;
  background: transparent;
  padding: 0;
}

.widget__related-product button:hover {
  cursor: pointer;
}

// styling for Product Card component
.product__card {
  border: 0.08rem solid black;
  width: 10rem;
  position: relative;

  * { margin: 0 }

  // dark-mode
  #App__container.dark-mode & {
    border-color: $color__font--dark;
  }

  img {
    display: block;
    width: 100%;
    aspect-ratio: 1/1;
    object-fit: cover;
  }

  // for star button
  button {
    @include button--formless;
    position: absolute;
    top: 0;
    right: 0;
    margin: 0.5rem;

    svg {
      width: 1rem;
      stroke: black;
      stroke-width: 10;

      use:hover {
        fill: orange;
        //transform:
      }
    }
  }

  // text section
  section {
    @include flex(column, space-around, flex-start);
    height: 5rem;
    padding: 0.3rem;

    // this should be enforced in index.scss
    p {
      font-size: 0.6rem;

      & > s { color: red }

      &:first-child { text-transform: uppercase }
    }

    // all headline 1 to 6 should also be map to differen rem in index.scss
    h2 { font-size: 0.9rem }
  }

  // for delete button
  &--outfit button {
    margin: 0.3rem;

    svg {
      width: 1.5rem;
      stroke-width: 7;
      stroke: black;
      fill: transparent;

      &:hover { fill: red }
    }
  }

  // for adder card svg img
  &--adder {
    svg {
      width: 10rem;
      stroke: $color__font;
      stroke-width: 12;

      #App__container.dark-mode & {
        stroke: $color__font--dark;
      }
    }

    section {
      justify-content: flex-start;

      & > p {
        text-align: center;
        font-size: 1.2rem;
      }
    }
  }

  // hover effect on the whole card
  &:hover {
    cursor: pointer;
    box-shadow: 0 0 0.5rem 0.05rem black;
  }

  #App__container.dark-mode &:hover {
    box-shadow: 0 0 0.5rem 0.05rem white;
  }
}


// ## More refactor could be done;
// ProductCarousel Component
.product__carousel {
  width: 70%;
  min-width: 12rem;
  margin: auto;
  display: grid;
  grid-template-columns: repeat(10, 1fr);

  & > h2 {
    font-size: 1.2rem;
    margin: 2rem 0 0 0;
    padding-left: 1rem;
    grid-column: 2 / span 10;
  }

  & > button {
    @include button--formless;
    font: 2rem bold;
    color: $color__font;

    #App__container.dark-mode & {
      color: $color__font--sharp;
    }

    &.hidden {
      visibility: hidden;
    }
  }

  &__container {
    grid-column: 2 / span 8;
    display: flex;
    flex-wrap: nowrap;
    padding: 1rem;
    overflow: hidden;
    // min width -- one card wide
    min-width: 12rem;
    width: 100%;
    gap: 2rem;
  }

  &__scroller {
    display: flex;
    gap: 2rem;
    transition: translate 1s;
  }
}


// ProductModal Component
.product__modal {
  // modal take over the whole screen
  position: fixed;
  z-index: 100;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 70%);
  @include flex;

  table {
    border-collapse: collapse;
    background: white;
    display: block;
    max-height: 60vh;
    max-width: 80vw;
    overflow-y: auto;

    #App__container.dark-mode & {
      border: 0.3rem double $color__font--dark;
      background: $color__background--dark;
    }

    thead, caption {
      position: sticky;
      background: white;

      #App__container.dark-mode & {
        background: $color__background--dark;
      }
    }

    caption {
      top: 0;
      padding: 1rem 0 0 1rem;
      font-size: 0.8rem;
      height: 2rem;
      text-align: left;
    }

    thead {
      top: 2rem;

      th {
        padding-top: 0.5rem;
        padding-bottom: 1.5rem;

        &:first-child { min-width: 15vw }
        &:last-child { min-width: 15vw }
      }
    }

    th, td {
      vertical-align: top;
      padding: 1rem 1rem;

      $map: (1: left, 2: center, 3: right);
      @each $order, $position in $map {
        &:nth-child(#{$order}) { text-align: $position }
      }
    }

    // row hover effect, subject to dark mode;
    tbody tr {
      border-top: 0.05rem solid black;

      &:hover {
        color: white;
        background: grey;
      }
    }
  }
}

